package editor_1_1;

import java.awt.Color;
import java.awt.Font;
import java.io.File;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;
import org.jdesktop.swingx.border.DropShadowBorder; 
import org.apache.commons.io.FileUtils;
import org.apache.commons.lang3.text.WordUtils;

/**
 *
 * @author Samuele Pozzebon
 */
public class MainPage extends javax.swing.JFrame {
    /**
     * Creates new form MainPage
     */
    
    DropShadowBorder shadow; //ombra
        
    byte indx;
    
    Color defaultColor;     //colore di sfondo/primario
    Color mousePassedColor;   //colore di sfondo/secondario
    Color selectedColor;    //colore di sfondo/elemento selezionato
    Color textColor;        //colore dei testi
    Color chosenColor;
    
    Font mainF;
    Font subTitleFont;
    
    ClassInitialization init;
    
    LanguagesTabGenerator langTab;
    ReadLanguagesFile langRead;
    OutLanguagesFile langOut;
    List<ClassLanguages> langList;
    
    TranslationTabGenerator tranTable;
    ReadTranslationsFile tranRead;
    OutTranslationsFile tranOut;
    List<ClassTranslations> tranList;
    
    ReadGeneralFile genRead;
    OutGeneralFile genOut;
    ClassGeneralSettings genSet;
    
    String parent;
    String[] noSpacedFields;
    
    final String lightSet = new File("src/Editor_1_1/lightSet.png").getAbsolutePath();
    final String lightStat = new File("src/Editor_1_1/lightStat.png").getAbsolutePath();
    final String lightInfo = new File("src/Editor_1_1/lightInfo.png").getAbsolutePath();
    final String darkSet = new File("src/Editor_1_1/darkSet.png").getAbsolutePath();
    final String darkStat = new File("src/Editor_1_1/darkStat.png").getAbsolutePath();
    final String darkInfo = new File("src/Editor_1_1/darkInfo.png").getAbsolutePath();
    
    public MainPage() {
        initPersonalComponent();
        initComponents();
        preset();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jFileChooserFlag = new javax.swing.JFileChooser();
        jDialAddLang = new javax.swing.JDialog();
        DiaAddLCon = new javax.swing.JPanel();
        txtFLanguage = new javax.swing.JTextField();
        lblLangName = new javax.swing.JLabel();
        pnlTopHeaderDiaAddL = new javax.swing.JPanel();
        exitButtonDiaAddL = new javax.swing.JButton();
        barIconDiaAddL = new javax.swing.JLabel();
        titleLblDiaAddL = new javax.swing.JLabel();
        lblIconDir = new javax.swing.JLabel();
        lblIconSel = new javax.swing.JLabel();
        lblAddL = new javax.swing.JLabel();
        lblAdvAddLang = new javax.swing.JLabel();
        jColorChooser = new javax.swing.JColorChooser();
        jDialAddField = new javax.swing.JDialog();
        DiaAddFCon = new javax.swing.JPanel();
        txtFField = new javax.swing.JTextField();
        lblField = new javax.swing.JLabel();
        pnlTopHeaderAddF = new javax.swing.JPanel();
        exitButtonAddF = new javax.swing.JButton();
        barIconAddF = new javax.swing.JLabel();
        titleLblAddF = new javax.swing.JLabel();
        lblAddF = new javax.swing.JLabel();
        lblAdvAddField = new javax.swing.JLabel();
        jDialDel = new javax.swing.JDialog();
        DiaDelCont = new javax.swing.JPanel();
        pnlTopHeaderDiaDel = new javax.swing.JPanel();
        exitButtonDiaDel = new javax.swing.JButton();
        barIconDiaDel = new javax.swing.JLabel();
        titleLblDiaDel = new javax.swing.JLabel();
        scrollPaneDel = new javax.swing.JScrollPane();
        listDel = new javax.swing.JList<>();
        lblDel = new javax.swing.JLabel();
        jFileChooserLogo = new javax.swing.JFileChooser();
        jDialAddFieldStart = new javax.swing.JDialog();
        DiaAddFSCon = new javax.swing.JPanel();
        txtFFieldAddFS = new javax.swing.JTextField();
        lblFieldAddFS = new javax.swing.JLabel();
        pnlTopHeaderAddFS = new javax.swing.JPanel();
        exitButtonAddFS = new javax.swing.JButton();
        barIconAddFS = new javax.swing.JLabel();
        titleLblAddFS = new javax.swing.JLabel();
        lblAddFS = new javax.swing.JLabel();
        lblAdvAddFS = new javax.swing.JLabel();
        jFrameStart = new javax.swing.JFrame();
        DiaStartCon = new javax.swing.JPanel();
        txtFUser = new javax.swing.JTextField();
        lblUserStart = new javax.swing.JLabel();
        pnlTopHeaderDiaStart = new javax.swing.JPanel();
        exitButtonDiaStart = new javax.swing.JButton();
        barIconDiaStart = new javax.swing.JLabel();
        titleLblDiaStart = new javax.swing.JLabel();
        lblContinueStart = new javax.swing.JLabel();
        lblAdvStartFields = new javax.swing.JLabel();
        lblPasswStart = new javax.swing.JLabel();
        lblAddFSTart = new javax.swing.JLabel();
        scrollPaneFStart = new javax.swing.JScrollPane();
        listFStart = new javax.swing.JList<>();
        lblInfoStart1 = new javax.swing.JLabel();
        lblInfoStart2 = new javax.swing.JLabel();
        lblConPasswStart = new javax.swing.JLabel();
        passFieldConf = new javax.swing.JPasswordField();
        passFieldIns = new javax.swing.JPasswordField();
        lblAdvStartPass = new javax.swing.JLabel();
        lblFHost = new javax.swing.JLabel();
        txtFHost = new javax.swing.JTextField();
        pnlTopHeader = new javax.swing.JPanel();
        exitButton = new javax.swing.JButton();
        barIcon = new javax.swing.JLabel();
        titleLbl = new javax.swing.JLabel();
        pnlMenu = new javax.swing.JPanel();
        headerLayPane = new javax.swing.JLayeredPane();
        langP = new javax.swing.JPanel();
        langL = new javax.swing.JLabel();
        fieldP = new javax.swing.JPanel();
        fieldL = new javax.swing.JLabel();
        collogP = new javax.swing.JPanel();
        collogL = new javax.swing.JLabel();
        lang = new javax.swing.JPanel();
        lblLangHead = new javax.swing.JLabel();
        pnlScrPnEX = new javax.swing.JPanel();
        scrollPaneLang = new javax.swing.JScrollPane();
        pnlScrPnIN = new javax.swing.JPanel();
        pnlBtnAddLang = new javax.swing.JPanel();
        pnlDelLang = new javax.swing.JPanel();
        lblDelLang = new javax.swing.JLabel();
        pnlAddLang = new javax.swing.JPanel();
        lblAddLan = new javax.swing.JLabel();
        fiel = new javax.swing.JPanel();
        pnlScrTraEx = new javax.swing.JPanel();
        scrollPaneTran = new javax.swing.JScrollPane();
        pnlScrTraIn = new javax.swing.JPanel();
        lblAddField = new javax.swing.JLabel();
        lblDelField = new javax.swing.JLabel();
        collog = new javax.swing.JPanel();
        lblColBack = new javax.swing.JLabel();
        lblColText = new javax.swing.JLabel();
        lblColBox = new javax.swing.JLabel();
        lblColExHead = new javax.swing.JLabel();
        lblColInHead = new javax.swing.JLabel();
        lblColIcon = new javax.swing.JLabel();
        lblLogoDir = new javax.swing.JLabel();
        lblColExHeadChoose = new javax.swing.JLabel();
        lblColInHeadChoose = new javax.swing.JLabel();
        lblColBoxChoose = new javax.swing.JLabel();
        lblColTextChoose = new javax.swing.JLabel();
        lblColBackChoose = new javax.swing.JLabel();
        comBoxIcon = new javax.swing.JComboBox<>();
        lblColInHeadCode = new javax.swing.JLabel();
        lblColExHeadCode = new javax.swing.JLabel();
        lblColBoxCode = new javax.swing.JLabel();
        lblColTextCode = new javax.swing.JLabel();
        lblColBackCode = new javax.swing.JLabel();
        lblLogo = new javax.swing.JLabel();
        lblLogoChoose = new javax.swing.JLabel();
        lblDataPer = new javax.swing.JLabel();
        lblSubTColLog = new javax.swing.JLabel();
        lblSubTPri = new javax.swing.JLabel();
        lblSave = new javax.swing.JLabel();
        lblColTextAdv = new javax.swing.JLabel();
        lblColTextAdvChoos = new javax.swing.JLabel();
        lblColTextAdvCode = new javax.swing.JLabel();
        txtFDataPer = new javax.swing.JTextField();
        lblDataPerDay = new javax.swing.JLabel();
        checkDataPer = new javax.swing.JCheckBox();
        lblAdvColLog1 = new javax.swing.JLabel();
        lblAdvColLog2 = new javax.swing.JLabel();

        jFileChooserFlag.setApproveButtonText("Aggiungi");
        jFileChooserFlag.setCurrentDirectory(new java.io.File("C:\\Users\\Samuele Pozzebon\\Pictures"));
        jFileChooserFlag.setDialogTitle("Scegli l'immagine");
        jFileChooserFlag.setFileFilter(new FileNameExtensionFilter("Solo immagini", "jpg", "jpeg", "png", "gif"));
        jFileChooserFlag.setPreferredSize(new java.awt.Dimension(570, 400));
        jFileChooserFlag.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jFileChooserFlagActionPerformed(evt);
            }
        });
        jFileChooserFlag.getAccessibleContext().setAccessibleParent(pnlTopHeader);

        jDialAddLang.setAlwaysOnTop(true);
        jDialAddLang.setLocation(new java.awt.Point(0, 0));
        jDialAddLang.setMinimumSize(new java.awt.Dimension(300, 200));
        jDialAddLang.setUndecorated(true);
        jDialAddLang.setResizable(false);
        jDialAddLang.setSize(new java.awt.Dimension(300, 200));
        jDialAddLang.getContentPane().setLayout(null);

        DiaAddLCon.setBorder(javax.swing.BorderFactory.createLineBorder(defaultColor));
        DiaAddLCon.setMaximumSize(new java.awt.Dimension(300, 200));
        DiaAddLCon.setPreferredSize(new java.awt.Dimension(300, 200));
        DiaAddLCon.setLayout(null);

        txtFLanguage.setFont(new java.awt.Font("SansSerif", 0, 11)); // NOI18N
        txtFLanguage.setMaximumSize(new java.awt.Dimension(130, 20));
        txtFLanguage.setMinimumSize(new java.awt.Dimension(130, 20));
        txtFLanguage.setPreferredSize(new java.awt.Dimension(130, 20));
        DiaAddLCon.add(txtFLanguage);
        txtFLanguage.setBounds(140, 50, 130, 20);

        lblLangName.setFont(new java.awt.Font("SansSerif", 0, 11)); // NOI18N
        lblLangName.setText("Nome della lingua:");
        DiaAddLCon.add(lblLangName);
        lblLangName.setBounds(20, 50, 100, 20);

        pnlTopHeaderDiaAddL.setBackground(new java.awt.Color(255, 255, 255));
        pnlTopHeaderDiaAddL.setMaximumSize(new java.awt.Dimension(300, 24));
        pnlTopHeaderDiaAddL.setMinimumSize(new java.awt.Dimension(300, 24));
        pnlTopHeaderDiaAddL.setPreferredSize(new java.awt.Dimension(298, 24));
        pnlTopHeaderDiaAddL.setLayout(null);

        exitButtonDiaAddL.setIcon(new javax.swing.ImageIcon(getClass().getResource("/editor_1_1/closeIconEmpty.png"))); // NOI18N
        exitButtonDiaAddL.setToolTipText("");
        exitButtonDiaAddL.setBorder(null);
        exitButtonDiaAddL.setBorderPainted(false);
        exitButtonDiaAddL.setContentAreaFilled(false);
        exitButtonDiaAddL.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        exitButtonDiaAddL.setMaximumSize(new java.awt.Dimension(14, 14));
        exitButtonDiaAddL.setMinimumSize(new java.awt.Dimension(14, 14));
        exitButtonDiaAddL.setPreferredSize(new java.awt.Dimension(14, 14));
        exitButtonDiaAddL.setRolloverEnabled(false);
        exitButtonDiaAddL.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                exitButtonDiaAddLMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                exitButtonDiaAddLMouseExited(evt);
            }
        });
        exitButtonDiaAddL.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitButtonDiaAddLActionPerformed(evt);
            }
        });
        pnlTopHeaderDiaAddL.add(exitButtonDiaAddL);
        exitButtonDiaAddL.setBounds(280, 5, 14, 14);

        barIconDiaAddL.setIcon(new javax.swing.ImageIcon(getClass().getResource("/editor_1_1/editor_icon.jpg"))); // NOI18N
        pnlTopHeaderDiaAddL.add(barIconDiaAddL);
        barIconDiaAddL.setBounds(3, 2, 20, 20);

        titleLblDiaAddL.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        titleLblDiaAddL.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        titleLblDiaAddL.setText("Aggiungi lingua");
        titleLblDiaAddL.setPreferredSize(new java.awt.Dimension(200, 25));
        titleLblDiaAddL.setRequestFocusEnabled(false);
        pnlTopHeaderDiaAddL.add(titleLblDiaAddL);
        titleLblDiaAddL.setBounds(49, 0, 200, 25);

        DiaAddLCon.add(pnlTopHeaderDiaAddL);
        pnlTopHeaderDiaAddL.setBounds(1, 1, 298, 24);

        lblIconDir.setFont(new java.awt.Font("SansSerif", 0, 11)); // NOI18N
        DiaAddLCon.add(lblIconDir);
        lblIconDir.setBounds(140, 100, 130, 20);

        lblIconSel.setBackground(new java.awt.Color(96, 125, 139));
        lblIconSel.setFont(new java.awt.Font("SansSerif", 0, 11)); // NOI18N
        lblIconSel.setForeground(new java.awt.Color(236, 239, 241));
        lblIconSel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblIconSel.setText("Seleziona l'icona");
        lblIconSel.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        lblIconSel.setMaximumSize(new java.awt.Dimension(100, 20));
        lblIconSel.setMinimumSize(new java.awt.Dimension(100, 20));
        lblIconSel.setOpaque(true);
        lblIconSel.setPreferredSize(new java.awt.Dimension(100, 20));
        lblIconSel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblIconSelMouseClicked(evt);
            }
        });
        DiaAddLCon.add(lblIconSel);
        lblIconSel.setBounds(20, 100, 100, 20);

        lblAddL.setBackground(new java.awt.Color(96, 125, 139));
        lblAddL.setFont(new java.awt.Font("SansSerif", 0, 11)); // NOI18N
        lblAddL.setForeground(new java.awt.Color(236, 239, 241));
        lblAddL.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblAddL.setText("Aggiungi");
        lblAddL.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        lblAddL.setMaximumSize(new java.awt.Dimension(100, 20));
        lblAddL.setMinimumSize(new java.awt.Dimension(100, 20));
        lblAddL.setOpaque(true);
        lblAddL.setPreferredSize(new java.awt.Dimension(100, 20));
        lblAddL.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblAddLMouseClicked(evt);
            }
        });
        DiaAddLCon.add(lblAddL);
        lblAddL.setBounds(100, 150, 100, 20);

        lblAdvAddLang.setFont(new java.awt.Font("SansSerif", 0, 10)); // NOI18N
        lblAdvAddLang.setForeground(new java.awt.Color(255, 0, 0));
        lblAdvAddLang.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblAdvAddLang.setText("TUTTI I CAMPI DEVONO ESSERE COMPLETATI");
        DiaAddLCon.add(lblAdvAddLang);
        lblAdvAddLang.setBounds(0, 180, 300, 14);

        jDialAddLang.getContentPane().add(DiaAddLCon);
        DiaAddLCon.setBounds(0, 0, 300, 200);

        jDialAddLang.setLocationRelativeTo(null);

        jDialAddField.setAlwaysOnTop(true);
        jDialAddField.setUndecorated(true);
        jDialAddField.setResizable(false);
        jDialAddField.setSize(new java.awt.Dimension(300, 140));
        jDialAddField.getContentPane().setLayout(null);

        DiaAddFCon.setBorder(javax.swing.BorderFactory.createLineBorder(defaultColor));
        DiaAddFCon.setMaximumSize(new java.awt.Dimension(300, 200));
        DiaAddFCon.setPreferredSize(new java.awt.Dimension(300, 140));
        DiaAddFCon.setLayout(null);

        txtFField.setFont(new java.awt.Font("SansSerif", 0, 11)); // NOI18N
        txtFField.setMaximumSize(new java.awt.Dimension(130, 20));
        txtFField.setMinimumSize(new java.awt.Dimension(130, 20));
        txtFField.setPreferredSize(new java.awt.Dimension(130, 20));
        DiaAddFCon.add(txtFField);
        txtFField.setBounds(140, 50, 130, 20);

        lblField.setFont(new java.awt.Font("SansSerif", 0, 11)); // NOI18N
        lblField.setText("Nome del campo:");
        DiaAddFCon.add(lblField);
        lblField.setBounds(20, 50, 100, 20);

        pnlTopHeaderAddF.setBackground(new java.awt.Color(255, 255, 255));
        pnlTopHeaderAddF.setMaximumSize(new java.awt.Dimension(300, 24));
        pnlTopHeaderAddF.setMinimumSize(new java.awt.Dimension(300, 24));
        pnlTopHeaderAddF.setPreferredSize(new java.awt.Dimension(298, 24));
        pnlTopHeaderAddF.setLayout(null);

        exitButtonAddF.setIcon(new javax.swing.ImageIcon(getClass().getResource("/editor_1_1/closeIconEmpty.png"))); // NOI18N
        exitButtonAddF.setToolTipText("");
        exitButtonAddF.setBorder(null);
        exitButtonAddF.setBorderPainted(false);
        exitButtonAddF.setContentAreaFilled(false);
        exitButtonAddF.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        exitButtonAddF.setMaximumSize(new java.awt.Dimension(14, 14));
        exitButtonAddF.setMinimumSize(new java.awt.Dimension(14, 14));
        exitButtonAddF.setPreferredSize(new java.awt.Dimension(14, 14));
        exitButtonAddF.setRolloverEnabled(false);
        exitButtonAddF.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                exitButtonAddFMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                exitButtonAddFMouseExited(evt);
            }
        });
        exitButtonAddF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitButtonAddFActionPerformed(evt);
            }
        });
        pnlTopHeaderAddF.add(exitButtonAddF);
        exitButtonAddF.setBounds(280, 5, 14, 14);

        barIconAddF.setIcon(new javax.swing.ImageIcon(getClass().getResource("/editor_1_1/editor_icon.jpg"))); // NOI18N
        pnlTopHeaderAddF.add(barIconAddF);
        barIconAddF.setBounds(3, 2, 20, 20);

        titleLblAddF.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        titleLblAddF.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        titleLblAddF.setText("Aggiungi campo");
        titleLblAddF.setPreferredSize(new java.awt.Dimension(200, 25));
        titleLblAddF.setRequestFocusEnabled(false);
        pnlTopHeaderAddF.add(titleLblAddF);
        titleLblAddF.setBounds(49, 0, 200, 25);

        DiaAddFCon.add(pnlTopHeaderAddF);
        pnlTopHeaderAddF.setBounds(1, 1, 298, 24);

        lblAddF.setBackground(new java.awt.Color(96, 125, 139));
        lblAddF.setFont(new java.awt.Font("SansSerif", 0, 11)); // NOI18N
        lblAddF.setForeground(new java.awt.Color(236, 239, 241));
        lblAddF.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblAddF.setText("Aggiungi");
        lblAddF.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        lblAddF.setOpaque(true);
        lblAddF.setPreferredSize(new java.awt.Dimension(100, 20));
        lblAddF.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblAddFMouseClicked(evt);
            }
        });
        DiaAddFCon.add(lblAddF);
        lblAddF.setBounds(100, 90, 100, 20);

        lblAdvAddField.setFont(new java.awt.Font("SansSerif", 0, 10)); // NOI18N
        lblAdvAddField.setForeground(new java.awt.Color(255, 0, 0));
        lblAdvAddField.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblAdvAddField.setText("TUTTI I CAMPI DEVONO ESSERE COMPLETATI");
        DiaAddFCon.add(lblAdvAddField);
        lblAdvAddField.setBounds(0, 120, 300, 14);

        jDialAddField.getContentPane().add(DiaAddFCon);
        DiaAddFCon.setBounds(0, 0, 300, 140);

        jDialAddField.setLocationRelativeTo(null);

        jDialDel.setAlwaysOnTop(true);
        jDialDel.setUndecorated(true);
        jDialDel.setResizable(false);
        jDialDel.setSize(new java.awt.Dimension(300, 270));
        jDialDel.getContentPane().setLayout(null);

        DiaDelCont.setBorder(javax.swing.BorderFactory.createLineBorder(defaultColor));
        DiaDelCont.setMaximumSize(new java.awt.Dimension(300, 200));
        DiaDelCont.setPreferredSize(new java.awt.Dimension(300, 270));
        DiaDelCont.setLayout(null);

        pnlTopHeaderDiaDel.setBackground(new java.awt.Color(255, 255, 255));
        pnlTopHeaderDiaDel.setMaximumSize(new java.awt.Dimension(300, 24));
        pnlTopHeaderDiaDel.setMinimumSize(new java.awt.Dimension(300, 24));
        pnlTopHeaderDiaDel.setPreferredSize(new java.awt.Dimension(298, 24));
        pnlTopHeaderDiaDel.setLayout(null);

        exitButtonDiaDel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/editor_1_1/closeIconEmpty.png"))); // NOI18N
        exitButtonDiaDel.setToolTipText("");
        exitButtonDiaDel.setBorder(null);
        exitButtonDiaDel.setBorderPainted(false);
        exitButtonDiaDel.setContentAreaFilled(false);
        exitButtonDiaDel.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        exitButtonDiaDel.setMaximumSize(new java.awt.Dimension(14, 14));
        exitButtonDiaDel.setMinimumSize(new java.awt.Dimension(14, 14));
        exitButtonDiaDel.setPreferredSize(new java.awt.Dimension(14, 14));
        exitButtonDiaDel.setRolloverEnabled(false);
        exitButtonDiaDel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                exitButtonDiaDelMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                exitButtonDiaDelMouseExited(evt);
            }
        });
        exitButtonDiaDel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitButtonDiaDelActionPerformed(evt);
            }
        });
        pnlTopHeaderDiaDel.add(exitButtonDiaDel);
        exitButtonDiaDel.setBounds(280, 5, 14, 14);

        barIconDiaDel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/editor_1_1/editor_icon.jpg"))); // NOI18N
        pnlTopHeaderDiaDel.add(barIconDiaDel);
        barIconDiaDel.setBounds(3, 2, 20, 20);

        titleLblDiaDel.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        titleLblDiaDel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        titleLblDiaDel.setText("Elimina");
        titleLblDiaDel.setPreferredSize(new java.awt.Dimension(200, 25));
        titleLblDiaDel.setRequestFocusEnabled(false);
        pnlTopHeaderDiaDel.add(titleLblDiaDel);
        titleLblDiaDel.setBounds(49, 0, 200, 25);

        DiaDelCont.add(pnlTopHeaderDiaDel);
        pnlTopHeaderDiaDel.setBounds(1, 1, 298, 24);

        scrollPaneDel.setPreferredSize(new java.awt.Dimension(250, 130));

        listDel.setFont(new java.awt.Font("SansSerif", 0, 11)); // NOI18N
        listDel.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        scrollPaneDel.setViewportView(listDel);

        DiaDelCont.add(scrollPaneDel);
        scrollPaneDel.setBounds(50, 60, 200, 130);

        lblDel.setBackground(new java.awt.Color(96, 125, 139));
        lblDel.setFont(new java.awt.Font("SansSerif", 0, 11)); // NOI18N
        lblDel.setForeground(new java.awt.Color(236, 239, 241));
        lblDel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblDel.setText("Elimina");
        lblDel.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        lblDel.setOpaque(true);
        lblDel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblDelMouseClicked(evt);
            }
        });
        DiaDelCont.add(lblDel);
        lblDel.setBounds(101, 220, 100, 20);

        jDialDel.getContentPane().add(DiaDelCont);
        DiaDelCont.setBounds(0, 0, 300, 270);

        jDialDel.setLocationRelativeTo(null);

        jFileChooserLogo.setApproveButtonText("Aggiungi");
        jFileChooserLogo.setCurrentDirectory(new java.io.File("C:\\Users\\Samuele Pozzebon\\Pictures"));
        jFileChooserLogo.setDialogTitle("Scegli il logo");
        jFileChooserLogo.setFileFilter(new FileNameExtensionFilter("Solo immagini", "jpg", "jpeg", "png", "gif"));
        jFileChooserLogo.setPreferredSize(new java.awt.Dimension(570, 400));
        jFileChooserLogo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jFileChooserLogoActionPerformed(evt);
            }
        });

        jDialAddFieldStart.setAlwaysOnTop(true);
        jDialAddFieldStart.setUndecorated(true);
        jDialAddFieldStart.setResizable(false);
        jDialAddFieldStart.setSize(new java.awt.Dimension(300, 140));
        jDialAddFieldStart.getContentPane().setLayout(null);

        DiaAddFSCon.setBorder(javax.swing.BorderFactory.createLineBorder(defaultColor));
        DiaAddFSCon.setMaximumSize(new java.awt.Dimension(300, 200));
        DiaAddFSCon.setPreferredSize(new java.awt.Dimension(300, 140));
        DiaAddFSCon.setLayout(null);

        txtFFieldAddFS.setFont(new java.awt.Font("SansSerif", 0, 11)); // NOI18N
        txtFFieldAddFS.setMaximumSize(new java.awt.Dimension(130, 20));
        txtFFieldAddFS.setMinimumSize(new java.awt.Dimension(130, 20));
        txtFFieldAddFS.setPreferredSize(new java.awt.Dimension(130, 20));
        DiaAddFSCon.add(txtFFieldAddFS);
        txtFFieldAddFS.setBounds(140, 50, 130, 20);

        lblFieldAddFS.setFont(new java.awt.Font("SansSerif", 0, 11)); // NOI18N
        lblFieldAddFS.setText("Nome del campo:");
        DiaAddFSCon.add(lblFieldAddFS);
        lblFieldAddFS.setBounds(20, 50, 100, 20);

        pnlTopHeaderAddFS.setBackground(new java.awt.Color(255, 255, 255));
        pnlTopHeaderAddFS.setMaximumSize(new java.awt.Dimension(300, 24));
        pnlTopHeaderAddFS.setMinimumSize(new java.awt.Dimension(300, 24));
        pnlTopHeaderAddFS.setPreferredSize(new java.awt.Dimension(298, 24));
        pnlTopHeaderAddFS.setLayout(null);

        exitButtonAddFS.setIcon(new javax.swing.ImageIcon(getClass().getResource("/editor_1_1/closeIconEmpty.png"))); // NOI18N
        exitButtonAddFS.setToolTipText("");
        exitButtonAddFS.setBorder(null);
        exitButtonAddFS.setBorderPainted(false);
        exitButtonAddFS.setContentAreaFilled(false);
        exitButtonAddFS.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        exitButtonAddFS.setMaximumSize(new java.awt.Dimension(14, 14));
        exitButtonAddFS.setMinimumSize(new java.awt.Dimension(14, 14));
        exitButtonAddFS.setPreferredSize(new java.awt.Dimension(14, 14));
        exitButtonAddFS.setRolloverEnabled(false);
        exitButtonAddFS.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                exitButtonAddFSMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                exitButtonAddFSMouseExited(evt);
            }
        });
        exitButtonAddFS.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitButtonAddFSActionPerformed(evt);
            }
        });
        pnlTopHeaderAddFS.add(exitButtonAddFS);
        exitButtonAddFS.setBounds(280, 5, 14, 14);

        barIconAddFS.setIcon(new javax.swing.ImageIcon(getClass().getResource("/editor_1_1/editor_icon.jpg"))); // NOI18N
        pnlTopHeaderAddFS.add(barIconAddFS);
        barIconAddFS.setBounds(3, 2, 20, 20);

        titleLblAddFS.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        titleLblAddFS.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        titleLblAddFS.setText("Aggiungi campo");
        titleLblAddFS.setPreferredSize(new java.awt.Dimension(200, 25));
        titleLblAddFS.setRequestFocusEnabled(false);
        pnlTopHeaderAddFS.add(titleLblAddFS);
        titleLblAddFS.setBounds(49, 0, 200, 25);

        DiaAddFSCon.add(pnlTopHeaderAddFS);
        pnlTopHeaderAddFS.setBounds(1, 1, 298, 24);

        lblAddFS.setBackground(new java.awt.Color(96, 125, 139));
        lblAddFS.setFont(new java.awt.Font("SansSerif", 0, 11)); // NOI18N
        lblAddFS.setForeground(new java.awt.Color(236, 239, 241));
        lblAddFS.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblAddFS.setText("Aggiungi");
        lblAddFS.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        lblAddFS.setOpaque(true);
        lblAddFS.setPreferredSize(new java.awt.Dimension(100, 20));
        lblAddFS.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblAddFSMouseClicked(evt);
            }
        });
        DiaAddFSCon.add(lblAddFS);
        lblAddFS.setBounds(100, 90, 100, 20);

        lblAdvAddFS.setFont(new java.awt.Font("SansSerif", 0, 10)); // NOI18N
        lblAdvAddFS.setForeground(new java.awt.Color(255, 0, 0));
        lblAdvAddFS.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblAdvAddFS.setText("TUTTI I CAMPI DEVONO ESSERE COMPLETATI");
        DiaAddFSCon.add(lblAdvAddFS);
        lblAdvAddFS.setBounds(0, 120, 300, 14);

        jDialAddFieldStart.getContentPane().add(DiaAddFSCon);
        DiaAddFSCon.setBounds(0, 0, 300, 140);

        jDialAddFieldStart.setLocationRelativeTo(null);

        jFrameStart.setAlwaysOnTop(true);
        jFrameStart.setMinimumSize(new java.awt.Dimension(300, 400));
        jFrameStart.setUndecorated(true);
        jFrameStart.setResizable(false);
        jFrameStart.getContentPane().setLayout(null);

        DiaStartCon.setBorder(javax.swing.BorderFactory.createLineBorder(defaultColor));
        DiaStartCon.setMaximumSize(new java.awt.Dimension(300, 200));
        DiaStartCon.setPreferredSize(new java.awt.Dimension(300, 400));
        DiaStartCon.setLayout(null);

        txtFUser.setFont(new java.awt.Font("SansSerif", 0, 11)); // NOI18N
        txtFUser.setMaximumSize(new java.awt.Dimension(130, 20));
        txtFUser.setMinimumSize(new java.awt.Dimension(130, 20));
        txtFUser.setPreferredSize(new java.awt.Dimension(130, 20));
        DiaStartCon.add(txtFUser);
        txtFUser.setBounds(140, 50, 140, 20);

        lblUserStart.setFont(new java.awt.Font("SansSerif", 0, 11)); // NOI18N
        lblUserStart.setText("Username:");
        DiaStartCon.add(lblUserStart);
        lblUserStart.setBounds(20, 50, 110, 20);

        pnlTopHeaderDiaStart.setBackground(new java.awt.Color(255, 255, 255));
        pnlTopHeaderDiaStart.setMaximumSize(new java.awt.Dimension(300, 24));
        pnlTopHeaderDiaStart.setMinimumSize(new java.awt.Dimension(300, 24));
        pnlTopHeaderDiaStart.setPreferredSize(new java.awt.Dimension(298, 24));
        pnlTopHeaderDiaStart.setLayout(null);

        exitButtonDiaStart.setIcon(new javax.swing.ImageIcon(getClass().getResource("/editor_1_1/closeIconEmpty.png"))); // NOI18N
        exitButtonDiaStart.setToolTipText("");
        exitButtonDiaStart.setBorder(null);
        exitButtonDiaStart.setBorderPainted(false);
        exitButtonDiaStart.setContentAreaFilled(false);
        exitButtonDiaStart.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        exitButtonDiaStart.setMaximumSize(new java.awt.Dimension(14, 14));
        exitButtonDiaStart.setMinimumSize(new java.awt.Dimension(14, 14));
        exitButtonDiaStart.setPreferredSize(new java.awt.Dimension(14, 14));
        exitButtonDiaStart.setRolloverEnabled(false);
        exitButtonDiaStart.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                exitButtonDiaStartMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                exitButtonDiaStartMouseExited(evt);
            }
        });
        exitButtonDiaStart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitButtonDiaStartActionPerformed(evt);
            }
        });
        pnlTopHeaderDiaStart.add(exitButtonDiaStart);
        exitButtonDiaStart.setBounds(280, 5, 14, 14);

        barIconDiaStart.setIcon(new javax.swing.ImageIcon(getClass().getResource("/editor_1_1/editor_icon.jpg"))); // NOI18N
        pnlTopHeaderDiaStart.add(barIconDiaStart);
        barIconDiaStart.setBounds(3, 2, 20, 20);

        titleLblDiaStart.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        titleLblDiaStart.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        titleLblDiaStart.setText("Primo avvio");
        titleLblDiaStart.setPreferredSize(new java.awt.Dimension(200, 25));
        titleLblDiaStart.setRequestFocusEnabled(false);
        pnlTopHeaderDiaStart.add(titleLblDiaStart);
        titleLblDiaStart.setBounds(49, 0, 200, 25);

        DiaStartCon.add(pnlTopHeaderDiaStart);
        pnlTopHeaderDiaStart.setBounds(1, 1, 298, 24);

        lblContinueStart.setBackground(new java.awt.Color(96, 125, 139));
        lblContinueStart.setFont(new java.awt.Font("SansSerif", 0, 11)); // NOI18N
        lblContinueStart.setForeground(new java.awt.Color(236, 239, 241));
        lblContinueStart.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblContinueStart.setText("Continua");
        lblContinueStart.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        lblContinueStart.setMaximumSize(new java.awt.Dimension(100, 20));
        lblContinueStart.setMinimumSize(new java.awt.Dimension(100, 20));
        lblContinueStart.setOpaque(true);
        lblContinueStart.setPreferredSize(new java.awt.Dimension(100, 20));
        lblContinueStart.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblContinueStartMouseClicked(evt);
            }
        });
        DiaStartCon.add(lblContinueStart);
        lblContinueStart.setBounds(170, 350, 100, 20);

        lblAdvStartFields.setFont(new java.awt.Font("SansSerif", 0, 11)); // NOI18N
        lblAdvStartFields.setForeground(new java.awt.Color(255, 0, 0));
        lblAdvStartFields.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblAdvStartFields.setText("Completa tutti i campi");
        DiaStartCon.add(lblAdvStartFields);
        lblAdvStartFields.setBounds(0, 380, 300, 15);

        lblPasswStart.setFont(new java.awt.Font("SansSerif", 0, 11)); // NOI18N
        lblPasswStart.setText("Password:");
        DiaStartCon.add(lblPasswStart);
        lblPasswStart.setBounds(20, 90, 110, 20);

        lblAddFSTart.setBackground(new java.awt.Color(96, 125, 139));
        lblAddFSTart.setFont(new java.awt.Font("SansSerif", 0, 11)); // NOI18N
        lblAddFSTart.setForeground(new java.awt.Color(236, 239, 241));
        lblAddFSTart.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblAddFSTart.setText("Aggiungi campo");
        lblAddFSTart.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        lblAddFSTart.setOpaque(true);
        lblAddFSTart.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblAddFSTartMouseClicked(evt);
            }
        });
        DiaStartCon.add(lblAddFSTart);
        lblAddFSTart.setBounds(30, 350, 100, 20);

        listFStart.setFont(new java.awt.Font("SansSerif", 0, 11)); // NOI18N
        listFStart.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = {  };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        scrollPaneFStart.setViewportView(listFStart);

        DiaStartCon.add(scrollPaneFStart);
        scrollPaneFStart.setBounds(80, 260, 140, 70);

        lblInfoStart1.setFont(new java.awt.Font("SansSerif", 0, 11)); // NOI18N
        lblInfoStart1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblInfoStart1.setText("Campi permanenti");
        DiaStartCon.add(lblInfoStart1);
        lblInfoStart1.setBounds(80, 210, 130, 15);

        lblInfoStart2.setFont(new java.awt.Font("SansSerif", 0, 10)); // NOI18N
        lblInfoStart2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblInfoStart2.setText("Questi campi non potranno poi essere rimossi");
        DiaStartCon.add(lblInfoStart2);
        lblInfoStart2.setBounds(10, 230, 280, 14);

        lblConPasswStart.setFont(new java.awt.Font("SansSerif", 0, 11)); // NOI18N
        lblConPasswStart.setText("Conferma password:");
        DiaStartCon.add(lblConPasswStart);
        lblConPasswStart.setBounds(20, 130, 110, 20);
        DiaStartCon.add(passFieldConf);
        passFieldConf.setBounds(140, 130, 140, 20);
        DiaStartCon.add(passFieldIns);
        passFieldIns.setBounds(140, 90, 140, 20);

        lblAdvStartPass.setFont(new java.awt.Font("SansSerif", 0, 11)); // NOI18N
        lblAdvStartPass.setForeground(new java.awt.Color(255, 0, 0));
        lblAdvStartPass.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblAdvStartPass.setText("Le password non corrispondono");
        DiaStartCon.add(lblAdvStartPass);
        lblAdvStartPass.setBounds(0, 380, 300, 15);

        lblFHost.setFont(new java.awt.Font("SansSerif", 0, 11)); // NOI18N
        lblFHost.setText("Destinazione DB:");
        DiaStartCon.add(lblFHost);
        lblFHost.setBounds(20, 170, 110, 20);

        txtFHost.setFont(new java.awt.Font("SansSerif", 0, 11)); // NOI18N
        txtFHost.setMaximumSize(new java.awt.Dimension(130, 20));
        txtFHost.setMinimumSize(new java.awt.Dimension(130, 20));
        txtFHost.setPreferredSize(new java.awt.Dimension(130, 20));
        DiaStartCon.add(txtFHost);
        txtFHost.setBounds(140, 170, 140, 20);

        jFrameStart.getContentPane().add(DiaStartCon);
        DiaStartCon.setBounds(0, 0, 300, 400);

        jFrameStart.setLocationRelativeTo(null);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Site editor");
        setAlwaysOnTop(true);
        setBackground(new java.awt.Color(255, 255, 255));
        setLocation(new java.awt.Point(0, 0));
        setMinimumSize(new java.awt.Dimension(402, 623));
        setName("Site editor"); // NOI18N
        setUndecorated(true);
        setSize(new java.awt.Dimension(402, 623));
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });
        getContentPane().setLayout(null);

        pnlTopHeader.setBackground(new java.awt.Color(255, 255, 255));
        pnlTopHeader.setMaximumSize(new java.awt.Dimension(402, 24));
        pnlTopHeader.setMinimumSize(new java.awt.Dimension(402, 24));
        pnlTopHeader.setPreferredSize(new java.awt.Dimension(402, 24));
        pnlTopHeader.setLayout(null);

        exitButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/editor_1_1/closeIconEmpty.png"))); // NOI18N
        exitButton.setToolTipText("");
        exitButton.setBorder(null);
        exitButton.setBorderPainted(false);
        exitButton.setContentAreaFilled(false);
        exitButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        exitButton.setMaximumSize(new java.awt.Dimension(14, 14));
        exitButton.setMinimumSize(new java.awt.Dimension(14, 14));
        exitButton.setPreferredSize(new java.awt.Dimension(14, 14));
        exitButton.setRolloverEnabled(false);
        exitButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                exitButtonMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                exitButtonMouseExited(evt);
            }
        });
        exitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitButtonActionPerformed(evt);
            }
        });
        pnlTopHeader.add(exitButton);
        exitButton.setBounds(383, 5, 14, 14);

        barIcon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/editor_1_1/editor_icon.jpg"))); // NOI18N
        pnlTopHeader.add(barIcon);
        barIcon.setBounds(3, 2, 20, 20);

        titleLbl.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        titleLbl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        titleLbl.setText(getTitle());
        titleLbl.setPreferredSize(new java.awt.Dimension(200, 25));
        titleLbl.setRequestFocusEnabled(false);
        pnlTopHeader.add(titleLbl);
        titleLbl.setBounds(101, 0, 200, 25);

        getContentPane().add(pnlTopHeader);
        pnlTopHeader.setBounds(0, 0, 402, 24);

        pnlMenu.setMaximumSize(new java.awt.Dimension(402, 542));
        pnlMenu.setMinimumSize(new java.awt.Dimension(402, 542));
        pnlMenu.setPreferredSize(new java.awt.Dimension(402, 599));
        pnlMenu.setLayout(null);

        headerLayPane.setBorder(shadow);
        headerLayPane.setForeground(textColor);
        headerLayPane.setFont(subTitleFont);
        headerLayPane.setMaximumSize(new java.awt.Dimension(402, 56));
        headerLayPane.setMinimumSize(new java.awt.Dimension(402, 56));

        langP.setBackground(selectedColor);
        langP.setMaximumSize(new java.awt.Dimension(134, 46));
        langP.setMinimumSize(new java.awt.Dimension(134, 46));
        langP.setPreferredSize(new java.awt.Dimension(134, 46));
        langP.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                langPMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                langPMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                langPMouseExited(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                langPMouseReleased(evt);
            }
        });

        langL.setFont(subTitleFont);
        langL.setForeground(textColor);
        langL.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        langL.setLabelFor(langP);
        langL.setText("Lingue");
        langL.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        langL.setPreferredSize(new java.awt.Dimension(134, 46));

        javax.swing.GroupLayout langPLayout = new javax.swing.GroupLayout(langP);
        langP.setLayout(langPLayout);
        langPLayout.setHorizontalGroup(
            langPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, langPLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(langL, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        langPLayout.setVerticalGroup(
            langPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(langPLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(langL, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        headerLayPane.add(langP);
        langP.setBounds(0, 0, 134, 46);
        langP.getAccessibleContext().setAccessibleName("Lingue");

        fieldP.setBackground(defaultColor);
        fieldP.setMaximumSize(new java.awt.Dimension(134, 46));
        fieldP.setMinimumSize(new java.awt.Dimension(134, 46));
        fieldP.setPreferredSize(new java.awt.Dimension(134, 46));
        fieldP.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                fieldPMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                fieldPMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                fieldPMouseExited(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                fieldPMouseReleased(evt);
            }
        });

        fieldL.setFont(subTitleFont);
        fieldL.setForeground(textColor);
        fieldL.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        fieldL.setLabelFor(langP);
        fieldL.setText("Campi");
        fieldL.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        fieldL.setMaximumSize(new java.awt.Dimension(134, 46));
        fieldL.setMinimumSize(new java.awt.Dimension(134, 46));
        fieldL.setPreferredSize(new java.awt.Dimension(134, 46));

        javax.swing.GroupLayout fieldPLayout = new javax.swing.GroupLayout(fieldP);
        fieldP.setLayout(fieldPLayout);
        fieldPLayout.setHorizontalGroup(
            fieldPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 134, Short.MAX_VALUE)
            .addGroup(fieldPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(fieldPLayout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(fieldL, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        fieldPLayout.setVerticalGroup(
            fieldPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 46, Short.MAX_VALUE)
            .addGroup(fieldPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(fieldPLayout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(fieldL, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );

        headerLayPane.add(fieldP);
        fieldP.setBounds(134, 0, 134, 46);
        fieldP.getAccessibleContext().setAccessibleName("Campi");

        collogP.setBackground(defaultColor);
        collogP.setMaximumSize(new java.awt.Dimension(134, 46));
        collogP.setMinimumSize(new java.awt.Dimension(134, 46));
        collogP.setPreferredSize(new java.awt.Dimension(134, 46));
        collogP.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                collogPMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                collogPMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                collogPMouseExited(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                collogPMouseReleased(evt);
            }
        });

        collogL.setFont(subTitleFont);
        collogL.setForeground(textColor);
        collogL.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        collogL.setLabelFor(langP);
        collogL.setText("Colori e logo");
        collogL.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        collogL.setMaximumSize(new java.awt.Dimension(134, 46));
        collogL.setMinimumSize(new java.awt.Dimension(134, 46));
        collogL.setPreferredSize(new java.awt.Dimension(134, 46));
        collogL.setVerifyInputWhenFocusTarget(false);

        javax.swing.GroupLayout collogPLayout = new javax.swing.GroupLayout(collogP);
        collogP.setLayout(collogPLayout);
        collogPLayout.setHorizontalGroup(
            collogPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(collogL, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        collogPLayout.setVerticalGroup(
            collogPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(collogL, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        headerLayPane.add(collogP);
        collogP.setBounds(268, 0, 134, 46);
        collogP.getAccessibleContext().setAccessibleName("Colori e logo");

        pnlMenu.add(headerLayPane);
        headerLayPane.setBounds(0, 0, 402, 56);

        lang.setMaximumSize(new java.awt.Dimension(402, 542));
        lang.setMinimumSize(new java.awt.Dimension(402, 542));
        lang.setPreferredSize(new java.awt.Dimension(402, 542));

        lblLangHead.setFont(new java.awt.Font("SansSerif", 0, 16)); // NOI18N
        lblLangHead.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblLangHead.setText("Seleziona le lingue da visualizzare");

        pnlScrPnEX.setPreferredSize(new java.awt.Dimension(402, 360));
        pnlScrPnEX.setLayout(null);

        scrollPaneLang.setMaximumSize(new java.awt.Dimension(350, 300));
        scrollPaneLang.setMinimumSize(new java.awt.Dimension(0, 0));
        scrollPaneLang.setOpaque(false);
        scrollPaneLang.setPreferredSize(new java.awt.Dimension(250, 300));

        pnlScrPnIN.setBackground(new java.awt.Color(255, 255, 255));
        pnlScrPnIN.setLayout(new java.awt.GridLayout(2, 0));
        scrollPaneLang.setViewportView(pnlScrPnIN);

        pnlScrPnEX.add(scrollPaneLang);
        scrollPaneLang.setBounds(76, 30, 250, 300);

        pnlBtnAddLang.setMaximumSize(new java.awt.Dimension(402, 107));
        pnlBtnAddLang.setMinimumSize(new java.awt.Dimension(402, 107));
        pnlBtnAddLang.setPreferredSize(new java.awt.Dimension(402, 107));
        pnlBtnAddLang.setLayout(null);

        pnlDelLang.setBackground(defaultColor);
        pnlDelLang.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        pnlDelLang.setMaximumSize(new java.awt.Dimension(999999999, 99999999));
        pnlDelLang.setPreferredSize(new java.awt.Dimension(120, 35));

        lblDelLang.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        lblDelLang.setForeground(textColor);
        lblDelLang.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblDelLang.setText("Elimina lingua");
        lblDelLang.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        lblDelLang.setMaximumSize(new java.awt.Dimension(120, 35));
        lblDelLang.setMinimumSize(new java.awt.Dimension(120, 35));
        lblDelLang.setPreferredSize(new java.awt.Dimension(120, 35));
        lblDelLang.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblDelLangMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout pnlDelLangLayout = new javax.swing.GroupLayout(pnlDelLang);
        pnlDelLang.setLayout(pnlDelLangLayout);
        pnlDelLangLayout.setHorizontalGroup(
            pnlDelLangLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lblDelLang, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        pnlDelLangLayout.setVerticalGroup(
            pnlDelLangLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lblDelLang, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pnlBtnAddLang.add(pnlDelLang);
        pnlDelLang.setBounds(232, 20, 120, 35);

        pnlAddLang.setBackground(defaultColor);
        pnlAddLang.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        pnlAddLang.setMaximumSize(new java.awt.Dimension(120, 35));
        pnlAddLang.setMinimumSize(new java.awt.Dimension(120, 35));
        pnlAddLang.setPreferredSize(new java.awt.Dimension(120, 35));
        pnlAddLang.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                pnlAddLangMouseClicked(evt);
            }
        });

        lblAddLan.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        lblAddLan.setForeground(textColor);
        lblAddLan.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblAddLan.setText("Aggiungi lingua");
        lblAddLan.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        lblAddLan.setMaximumSize(new java.awt.Dimension(120, 35));
        lblAddLan.setMinimumSize(new java.awt.Dimension(120, 35));
        lblAddLan.setPreferredSize(new java.awt.Dimension(120, 35));

        javax.swing.GroupLayout pnlAddLangLayout = new javax.swing.GroupLayout(pnlAddLang);
        pnlAddLang.setLayout(pnlAddLangLayout);
        pnlAddLangLayout.setHorizontalGroup(
            pnlAddLangLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lblAddLan, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        pnlAddLangLayout.setVerticalGroup(
            pnlAddLangLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lblAddLan, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pnlBtnAddLang.add(pnlAddLang);
        pnlAddLang.setBounds(50, 20, 120, 35);

        javax.swing.GroupLayout langLayout = new javax.swing.GroupLayout(lang);
        lang.setLayout(langLayout);
        langLayout.setHorizontalGroup(
            langLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lblLangHead, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(pnlScrPnEX, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(pnlBtnAddLang, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        langLayout.setVerticalGroup(
            langLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(langLayout.createSequentialGroup()
                .addComponent(lblLangHead, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(pnlScrPnEX, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(pnlBtnAddLang, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pnlMenu.add(lang);
        lang.setBounds(0, 56, 402, 542);

        fiel.setMaximumSize(new java.awt.Dimension(402, 542));
        fiel.setMinimumSize(new java.awt.Dimension(402, 542));
        fiel.setPreferredSize(new java.awt.Dimension(402, 542));
        fiel.setLayout(null);

        pnlScrTraEx.setMinimumSize(new java.awt.Dimension(0, 0));
        pnlScrTraEx.setPreferredSize(new java.awt.Dimension(350, 300));
        pnlScrTraEx.setLayout(null);

        scrollPaneTran.setAutoscrolls(true);
        scrollPaneTran.setPreferredSize(new java.awt.Dimension(350, 300));

        pnlScrTraIn.setBackground(new java.awt.Color(255, 255, 255));
        pnlScrTraIn.setLayout(new java.awt.GridLayout(1, 0));
        scrollPaneTran.setViewportView(pnlScrTraIn);
        pnlScrTraIn.setSize(pnlScrTraIn.getWidth(), (tranTable.getRowHeight()*tranTable.getRowCount()));

        pnlScrTraEx.add(scrollPaneTran);
        scrollPaneTran.setBounds(0, 0, 350, 300);

        fiel.add(pnlScrTraEx);
        pnlScrTraEx.setBounds(26, 105, 350, 310);

        lblAddField.setBackground(new java.awt.Color(96, 125, 139));
        lblAddField.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        lblAddField.setForeground(new java.awt.Color(236, 239, 241));
        lblAddField.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblAddField.setText("Aggiungi campo");
        lblAddField.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        lblAddField.setMaximumSize(new java.awt.Dimension(150, 35));
        lblAddField.setMinimumSize(new java.awt.Dimension(150, 35));
        lblAddField.setOpaque(true);
        lblAddField.setPreferredSize(new java.awt.Dimension(120, 35));
        lblAddField.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblAddFieldMouseClicked(evt);
            }
        });
        fiel.add(lblAddField);
        lblAddField.setBounds(50, 455, 120, 35);

        lblDelField.setBackground(new java.awt.Color(96, 125, 139));
        lblDelField.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        lblDelField.setForeground(new java.awt.Color(236, 239, 241));
        lblDelField.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblDelField.setText("Elimina campo");
        lblDelField.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        lblDelField.setMaximumSize(new java.awt.Dimension(150, 35));
        lblDelField.setMinimumSize(new java.awt.Dimension(150, 35));
        lblDelField.setOpaque(true);
        lblDelField.setPreferredSize(new java.awt.Dimension(120, 35));
        lblDelField.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblDelFieldMouseClicked(evt);
            }
        });
        fiel.add(lblDelField);
        lblDelField.setBounds(232, 455, 120, 35);

        pnlMenu.add(fiel);
        fiel.setBounds(0, 56, 402, 542);

        collog.setMaximumSize(new java.awt.Dimension(402, 542));
        collog.setPreferredSize(new java.awt.Dimension(402, 542));

        lblColBack.setFont(new java.awt.Font("SansSerif", 0, 11)); // NOI18N
        lblColBack.setText("Colore di sfondo:");

        lblColText.setFont(new java.awt.Font("SansSerif", 0, 11)); // NOI18N
        lblColText.setText("Colore del testo:");

        lblColBox.setFont(new java.awt.Font("SansSerif", 0, 11)); // NOI18N
        lblColBox.setText("Colore box:");

        lblColExHead.setFont(new java.awt.Font("SansSerif", 0, 11)); // NOI18N
        lblColExHead.setText("Colore esterno dell'header:");

        lblColInHead.setFont(new java.awt.Font("SansSerif", 0, 11)); // NOI18N
        lblColInHead.setText("Colore interno dell'header:");

        lblColIcon.setFont(new java.awt.Font("SansSerif", 0, 11)); // NOI18N
        lblColIcon.setText("Tema delle icone:");

        lblLogoDir.setFont(new java.awt.Font("SansSerif", 0, 11)); // NOI18N
        lblLogoDir.setPreferredSize(new java.awt.Dimension(86, 20));

        lblColExHeadChoose.setBackground(new java.awt.Color(96, 125, 139));
        lblColExHeadChoose.setFont(new java.awt.Font("SansSerif", 0, 11)); // NOI18N
        lblColExHeadChoose.setForeground(new java.awt.Color(236, 239, 241));
        lblColExHeadChoose.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblColExHeadChoose.setText("Scegli il colore");
        lblColExHeadChoose.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        lblColExHeadChoose.setOpaque(true);
        lblColExHeadChoose.setPreferredSize(new java.awt.Dimension(80, 20));
        lblColExHeadChoose.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblColExHeadChooseMouseClicked(evt);
            }
        });

        lblColInHeadChoose.setBackground(new java.awt.Color(96, 125, 139));
        lblColInHeadChoose.setFont(new java.awt.Font("SansSerif", 0, 11)); // NOI18N
        lblColInHeadChoose.setForeground(new java.awt.Color(236, 239, 241));
        lblColInHeadChoose.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblColInHeadChoose.setText("Scegli il colore");
        lblColInHeadChoose.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        lblColInHeadChoose.setOpaque(true);
        lblColInHeadChoose.setPreferredSize(new java.awt.Dimension(80, 20));
        lblColInHeadChoose.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblColInHeadChooseMouseClicked(evt);
            }
        });

        lblColBoxChoose.setBackground(new java.awt.Color(96, 125, 139));
        lblColBoxChoose.setFont(new java.awt.Font("SansSerif", 0, 11)); // NOI18N
        lblColBoxChoose.setForeground(new java.awt.Color(236, 239, 241));
        lblColBoxChoose.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblColBoxChoose.setText("Scegli il colore");
        lblColBoxChoose.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        lblColBoxChoose.setOpaque(true);
        lblColBoxChoose.setPreferredSize(new java.awt.Dimension(80, 20));
        lblColBoxChoose.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblColBoxChooseMouseClicked(evt);
            }
        });

        lblColTextChoose.setBackground(new java.awt.Color(96, 125, 139));
        lblColTextChoose.setFont(new java.awt.Font("SansSerif", 0, 11)); // NOI18N
        lblColTextChoose.setForeground(new java.awt.Color(236, 239, 241));
        lblColTextChoose.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblColTextChoose.setText("Scegli il colore");
        lblColTextChoose.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        lblColTextChoose.setOpaque(true);
        lblColTextChoose.setPreferredSize(new java.awt.Dimension(80, 20));
        lblColTextChoose.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblColTextChooseMouseClicked(evt);
            }
        });

        lblColBackChoose.setBackground(new java.awt.Color(96, 125, 139));
        lblColBackChoose.setFont(new java.awt.Font("SansSerif", 0, 11)); // NOI18N
        lblColBackChoose.setForeground(new java.awt.Color(236, 239, 241));
        lblColBackChoose.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblColBackChoose.setText("Scegli il colore");
        lblColBackChoose.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        lblColBackChoose.setOpaque(true);
        lblColBackChoose.setPreferredSize(new java.awt.Dimension(80, 20));
        lblColBackChoose.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblColBackChooseMouseClicked(evt);
            }
        });

        comBoxIcon.setFont(new java.awt.Font("SansSerif", 0, 11)); // NOI18N
        comBoxIcon.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Chiaro", "Scuro"}));

        lblColInHeadCode.setFont(new java.awt.Font("SansSerif", 0, 11)); // NOI18N
        lblColInHeadCode.setOpaque(true);
        lblColInHeadCode.setPreferredSize(new java.awt.Dimension(86, 20));

        lblColExHeadCode.setFont(new java.awt.Font("SansSerif", 0, 11)); // NOI18N
        lblColExHeadCode.setOpaque(true);
        lblColExHeadCode.setPreferredSize(new java.awt.Dimension(86, 20));

        lblColBoxCode.setFont(new java.awt.Font("SansSerif", 0, 11)); // NOI18N
        lblColBoxCode.setOpaque(true);
        lblColBoxCode.setPreferredSize(new java.awt.Dimension(86, 20));

        lblColTextCode.setFont(new java.awt.Font("SansSerif", 0, 11)); // NOI18N
        lblColTextCode.setOpaque(true);
        lblColTextCode.setPreferredSize(new java.awt.Dimension(86, 20));

        lblColBackCode.setFont(new java.awt.Font("SansSerif", 0, 11)); // NOI18N
        lblColBackCode.setOpaque(true);
        lblColBackCode.setPreferredSize(new java.awt.Dimension(86, 20));

        lblLogo.setFont(new java.awt.Font("SansSerif", 0, 11)); // NOI18N
        lblLogo.setText("Logo aziendale:");

        lblLogoChoose.setBackground(new java.awt.Color(96, 125, 139));
        lblLogoChoose.setFont(new java.awt.Font("SansSerif", 0, 11)); // NOI18N
        lblLogoChoose.setForeground(new java.awt.Color(236, 239, 241));
        lblLogoChoose.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblLogoChoose.setText("Scegli l'immagine");
        lblLogoChoose.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        lblLogoChoose.setOpaque(true);
        lblLogoChoose.setPreferredSize(new java.awt.Dimension(90, 20));
        lblLogoChoose.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblLogoChooseMouseClicked(evt);
            }
        });

        lblDataPer.setFont(new java.awt.Font("SansSerif", 0, 11)); // NOI18N
        lblDataPer.setText("Persistenza dei dati:");

        lblSubTColLog.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        lblSubTColLog.setText("Colori e logo");

        lblSubTPri.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        lblSubTPri.setText("Privacy");

        lblSave.setBackground(new java.awt.Color(96, 125, 139));
        lblSave.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        lblSave.setForeground(new java.awt.Color(236, 239, 241));
        lblSave.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblSave.setText("Salva");
        lblSave.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        lblSave.setOpaque(true);
        lblSave.setPreferredSize(new java.awt.Dimension(60, 25));
        lblSave.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblSaveMouseClicked(evt);
            }
        });

        lblColTextAdv.setFont(new java.awt.Font("SansSerif", 0, 11)); // NOI18N
        lblColTextAdv.setText("Colore degli avvisi:");

        lblColTextAdvChoos.setBackground(new java.awt.Color(96, 125, 139));
        lblColTextAdvChoos.setFont(new java.awt.Font("SansSerif", 0, 11)); // NOI18N
        lblColTextAdvChoos.setForeground(new java.awt.Color(236, 239, 241));
        lblColTextAdvChoos.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblColTextAdvChoos.setText("Scegli il colore");
        lblColTextAdvChoos.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        lblColTextAdvChoos.setOpaque(true);
        lblColTextAdvChoos.setPreferredSize(new java.awt.Dimension(80, 20));
        lblColTextAdvChoos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblColTextAdvChoosMouseClicked(evt);
            }
        });

        lblColTextAdvCode.setFont(new java.awt.Font("SansSerif", 0, 11)); // NOI18N
        lblColTextAdvCode.setOpaque(true);
        lblColTextAdvCode.setPreferredSize(new java.awt.Dimension(86, 20));

        txtFDataPer.setFont(new java.awt.Font("SansSerif", 0, 11)); // NOI18N
        txtFDataPer.setMinimumSize(new java.awt.Dimension(50, 20));
        txtFDataPer.setPreferredSize(new java.awt.Dimension(50, 20));

        lblDataPerDay.setFont(new java.awt.Font("SansSerif", 0, 11)); // NOI18N
        lblDataPerDay.setText("giorni");

        checkDataPer.setFont(new java.awt.Font("SansSerif", 0, 11)); // NOI18N
        checkDataPer.setText("Per sempre");
        checkDataPer.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                checkDataPerStateChanged(evt);
            }
        });

        lblAdvColLog1.setFont(new java.awt.Font("SansSerif", 0, 11)); // NOI18N
        lblAdvColLog1.setForeground(new java.awt.Color(255, 0, 0));
        lblAdvColLog1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblAdvColLog1.setText("COMPLETARE TUTTI I CAMPI");

        lblAdvColLog2.setFont(new java.awt.Font("SansSerif", 0, 11)); // NOI18N
        lblAdvColLog2.setForeground(new java.awt.Color(255, 0, 0));
        lblAdvColLog2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblAdvColLog2.setText("TUTTI I CAMPI DEVONO ESSERE TRADOTTI");

        javax.swing.GroupLayout collogLayout = new javax.swing.GroupLayout(collog);
        collog.setLayout(collogLayout);
        collogLayout.setHorizontalGroup(
            collogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(collogLayout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addComponent(lblSubTColLog))
            .addGroup(collogLayout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addComponent(lblColBack)
                .addGap(65, 65, 65)
                .addComponent(lblColBackChoose, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(lblColBackCode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(collogLayout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addComponent(lblColText)
                .addGap(69, 69, 69)
                .addComponent(lblColTextChoose, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(lblColTextCode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(collogLayout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addComponent(lblColTextAdv)
                .addGap(57, 57, 57)
                .addComponent(lblColTextAdvChoos, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(lblColTextAdvCode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(collogLayout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addComponent(lblColBox)
                .addGap(92, 92, 92)
                .addComponent(lblColBoxChoose, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(lblColBoxCode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(collogLayout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addComponent(lblColExHead)
                .addGap(18, 18, 18)
                .addComponent(lblColExHeadChoose, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(lblColExHeadCode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(collogLayout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addComponent(lblColInHead)
                .addGap(22, 22, 22)
                .addComponent(lblColInHeadChoose, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(lblColInHeadCode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(collogLayout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addComponent(lblColIcon)
                .addGap(64, 64, 64)
                .addComponent(comBoxIcon, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(collogLayout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addComponent(lblLogo)
                .addGap(71, 71, 71)
                .addComponent(lblLogoChoose, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(lblLogoDir, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(collogLayout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addComponent(lblSubTPri))
            .addGroup(collogLayout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addComponent(lblDataPer)
                .addGap(63, 63, 63)
                .addComponent(txtFDataPer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(4, 4, 4)
                .addComponent(lblDataPerDay)
                .addGap(18, 18, 18)
                .addComponent(checkDataPer))
            .addGroup(collogLayout.createSequentialGroup()
                .addGap(171, 171, 171)
                .addComponent(lblSave, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addComponent(lblAdvColLog1, javax.swing.GroupLayout.PREFERRED_SIZE, 402, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGroup(collogLayout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(lblAdvColLog2, javax.swing.GroupLayout.PREFERRED_SIZE, 382, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        collogLayout.setVerticalGroup(
            collogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(collogLayout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addComponent(lblSubTColLog)
                .addGap(18, 18, 18)
                .addGroup(collogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(collogLayout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(lblColBack))
                    .addComponent(lblColBackChoose, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblColBackCode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(collogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(collogLayout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(lblColText))
                    .addComponent(lblColTextChoose, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblColTextCode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(collogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(collogLayout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(lblColTextAdv))
                    .addComponent(lblColTextAdvChoos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblColTextAdvCode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(collogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(collogLayout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(lblColBox))
                    .addComponent(lblColBoxChoose, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblColBoxCode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(collogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(collogLayout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(lblColExHead))
                    .addComponent(lblColExHeadChoose, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblColExHeadCode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(collogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(collogLayout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(lblColInHead))
                    .addComponent(lblColInHeadChoose, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblColInHeadCode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(collogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(collogLayout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(lblColIcon))
                    .addComponent(comBoxIcon, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(collogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(collogLayout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(lblLogo))
                    .addComponent(lblLogoChoose, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblLogoDir, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(39, 39, 39)
                .addComponent(lblSubTPri)
                .addGroup(collogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(collogLayout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addComponent(lblDataPer))
                    .addGroup(collogLayout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addComponent(txtFDataPer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(collogLayout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(collogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblDataPerDay)
                            .addComponent(checkDataPer))))
                .addGap(27, 27, 27)
                .addComponent(lblSave, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(6, 6, 6)
                .addGroup(collogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblAdvColLog1)
                    .addComponent(lblAdvColLog2)))
        );

        pnlMenu.add(collog);
        collog.setBounds(0, 56, 402, 542);

        getContentPane().add(pnlMenu);
        pnlMenu.setBounds(0, 24, 402, 599);

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void langPMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_langPMouseClicked
        if (indx != 0) {
            selection((byte) 0);
        }
    }//GEN-LAST:event_langPMouseClicked

    private void langPMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_langPMouseEntered
        if (indx != 0) {
            langP.setBackground(mousePassedColor);
            langL.setForeground(Color.LIGHT_GRAY);
        }
    }//GEN-LAST:event_langPMouseEntered

    private void langPMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_langPMouseExited
        if (indx != 0) {
            langP.setBackground(defaultColor);
            langL.setForeground(textColor);
        }
    }//GEN-LAST:event_langPMouseExited

    private void langPMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_langPMouseReleased
        langP.setBackground(defaultColor);
        langL.setForeground(textColor);
    }//GEN-LAST:event_langPMouseReleased

    private void fieldPMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_fieldPMouseClicked
        if (indx != 1) {
            selection((byte) 1);
        }
    }//GEN-LAST:event_fieldPMouseClicked

    private void fieldPMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_fieldPMouseEntered
        if (indx != 1) {
            fieldP.setBackground(mousePassedColor);
            fieldL.setForeground(Color.LIGHT_GRAY);
        }
    }//GEN-LAST:event_fieldPMouseEntered

    private void fieldPMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_fieldPMouseExited
        if (indx != 1) {
            fieldP.setBackground(defaultColor);
            fieldL.setForeground(textColor);
        }
    }//GEN-LAST:event_fieldPMouseExited

    private void fieldPMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_fieldPMouseReleased
        fieldP.setBackground(defaultColor);
        fieldL.setForeground(textColor);
    }//GEN-LAST:event_fieldPMouseReleased

    private void collogPMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_collogPMouseClicked
        if (indx != 2) {
            selection((byte) 2);
        }
    }//GEN-LAST:event_collogPMouseClicked

    private void collogPMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_collogPMouseEntered
        if (indx != 2) {
            collogP.setBackground(mousePassedColor);
            collogL.setForeground(Color.LIGHT_GRAY);
        }
    }//GEN-LAST:event_collogPMouseEntered

    private void collogPMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_collogPMouseExited
        if (indx != 2) {
            collogP.setBackground(defaultColor);
            collogL.setForeground(textColor);
        }
    }//GEN-LAST:event_collogPMouseExited

    private void collogPMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_collogPMouseReleased
        collogP.setBackground(defaultColor);
        collogL.setForeground(textColor);
    }//GEN-LAST:event_collogPMouseReleased

    private void exitButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_exitButtonMouseEntered
        exitButton.setIcon(new ImageIcon(getClass().getResource("/editor_1_1/closeIconCrossed.png")));
    }//GEN-LAST:event_exitButtonMouseEntered

    private void exitButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_exitButtonMouseExited
        exitButton.setIcon(new ImageIcon(getClass().getResource("/editor_1_1/closeIconEmpty.png")));
    }//GEN-LAST:event_exitButtonMouseExited

    private void exitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitButtonActionPerformed
        closeNoSave();
    }//GEN-LAST:event_exitButtonActionPerformed

    private void pnlAddLangMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnlAddLangMouseClicked
        setEnabled(false);
        jDialAddLang.setVisible(true);
    }//GEN-LAST:event_pnlAddLangMouseClicked

    private void exitButtonDiaAddLMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_exitButtonDiaAddLMouseEntered
        exitButtonDiaAddL.setIcon(new ImageIcon(getClass().getResource("/editor_1_1/closeIconCrossed.png")));
    }//GEN-LAST:event_exitButtonDiaAddLMouseEntered

    private void exitButtonDiaAddLMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_exitButtonDiaAddLMouseExited
        exitButtonDiaAddL.setIcon(new ImageIcon(getClass().getResource("/editor_1_1/closeIconEmpty.png")));
    }//GEN-LAST:event_exitButtonDiaAddLMouseExited

    private void exitButtonDiaAddLActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitButtonDiaAddLActionPerformed
        jDialAddLang.setVisible(false);
        setEnabled(true);
    }//GEN-LAST:event_exitButtonDiaAddLActionPerformed

    private void lblIconSelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblIconSelMouseClicked
        setEnabled(false);
        jFileChooserFlag.showOpenDialog(rootPane);
    }//GEN-LAST:event_lblIconSelMouseClicked

    private void jFileChooserFlagActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jFileChooserFlagActionPerformed
        lblIconDir.setText(jFileChooserFlag.getSelectedFile().getAbsolutePath());
        setEnabled(true);
    }//GEN-LAST:event_jFileChooserFlagActionPerformed

    private void lblColBackChooseMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblColBackChooseMouseClicked
        setEnabled(false);
        chosenColor = jColorChooser.showDialog(rootPane, "Scegli il colore", Color.decode("#"+Integer.toHexString(genSet.getBackgroundColor().getRGB()).substring(2)));
        setEnabled(true);
        if(chosenColor != null) {lblColBackCode.setBackground(chosenColor);};
    }//GEN-LAST:event_lblColBackChooseMouseClicked

    private void checkDataPerStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_checkDataPerStateChanged
        if(checkDataPer.isSelected()) {txtFDataPer.setEnabled(false); txtFDataPer.setText(null);}
        else {txtFDataPer.setEnabled(true);};
    }//GEN-LAST:event_checkDataPerStateChanged

    private void lblAddFieldMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblAddFieldMouseClicked
        setEnabled(false);
        jDialAddField.setVisible(true);
    }//GEN-LAST:event_lblAddFieldMouseClicked

    private void exitButtonAddFMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_exitButtonAddFMouseEntered
        exitButtonAddF.setIcon(new ImageIcon(getClass().getResource("/editor_1_1/closeIconCrossed.png")));
    }//GEN-LAST:event_exitButtonAddFMouseEntered

    private void exitButtonAddFMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_exitButtonAddFMouseExited
        exitButtonAddF.setIcon(new ImageIcon(getClass().getResource("/editor_1_1/closeIconEmpty.png")));
    }//GEN-LAST:event_exitButtonAddFMouseExited

    private void exitButtonAddFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitButtonAddFActionPerformed
        setEnabled(true);
        jDialAddField.setVisible(false);
    }//GEN-LAST:event_exitButtonAddFActionPerformed

    private void exitButtonDiaDelMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_exitButtonDiaDelMouseEntered
        exitButtonDiaDel.setIcon(new ImageIcon(getClass().getResource("/editor_1_1/closeIconCrossed.png")));
    }//GEN-LAST:event_exitButtonDiaDelMouseEntered

    private void exitButtonDiaDelMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_exitButtonDiaDelMouseExited
        exitButtonDiaDel.setIcon(new ImageIcon(getClass().getResource("/editor_1_1/closeIconEmpty.png")));
    }//GEN-LAST:event_exitButtonDiaDelMouseExited

    private void exitButtonDiaDelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitButtonDiaDelActionPerformed
        setEnabled(true);
        jDialDel.setVisible(false);
    }//GEN-LAST:event_exitButtonDiaDelActionPerformed

    private void lblDelFieldMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblDelFieldMouseClicked
        listDel.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = tranList.get(0).getFieldsVariable();
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
            });
        parent = "field";
        setEnabled(false);
        jDialDel.setVisible(true);
    }//GEN-LAST:event_lblDelFieldMouseClicked

    private void lblDelLangMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblDelLangMouseClicked
        listDel.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = langTab.getLanguages();
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
            });
        parent = "lang";
        setEnabled(false);
        jDialDel.setVisible(true);
    }//GEN-LAST:event_lblDelLangMouseClicked

    private void jFileChooserLogoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jFileChooserLogoActionPerformed
        lblLogoDir.setText(jFileChooserLogo.getSelectedFile().getAbsolutePath());
        setEnabled(true);
    }//GEN-LAST:event_jFileChooserLogoActionPerformed

    private void lblAddLMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblAddLMouseClicked
        if ((txtFLanguage.getText() != "") && (lblIconDir.getText() != "")) {
            lblAdvAddLang.setVisible(false);
            String source = lblIconDir.getText();
            File f = new File(System.getProperty("user.dir").toString());
            
            String target = new File(f.getParentFile() + "/sito/images/"+txtFLanguage.getText()).getAbsolutePath();
            try {
                FileUtils.copyFile(new File(source), new File(target+".png"));
            } catch (IOException ex) {
                Logger.getLogger(MainPage.class.getName()).log(Level.SEVERE, null, ex);
            }
            target = new File(f.getParentFile() + "/Editor_1_1/src/editor_1_1/"+txtFLanguage.getText()).getAbsolutePath();
            try {
                FileUtils.copyFile(new File(source), new File(target+".png"));
            } catch (IOException ex) {
                Logger.getLogger(MainPage.class.getName()).log(Level.SEVERE, null, ex);
            }
            langList.add(new ClassLanguages(true, txtFLanguage.getText()+".png", txtFLanguage.getText()));
            langTab = new LanguagesTabGenerator(langList);
            pnlScrPnIN.removeAll();
            panelHeight();
            pnlScrPnIN.add(langTab);
            pnlScrPnIN.validate();
            pnlScrPnIN.repaint();
            
            String[] tr1 = new String[tranList.get(0).getTranslationsLenght()];
            String[] tr2 = new String[tranList.get(0).getFieldsStableLenght()];
            String[] tr3 = new String[tranList.get(0).getFieldsVariableLenght()];
            int c = 0;
            while (c < tranList.get(0).getTranslationsLenght()) {                
                tr1[c] = "TRANSLATE";
                c++;
            }
            c = 0;
            while (c < tranList.get(0).getFieldsStableLenght()) {                
                tr2[c] = "TRANSLATE";
                c++;
            }
            c = 0;
            while (c < tranList.get(0).getFieldsVariableLenght()) {                
                tr3[c] = "TRANSLATE";
                c++;
            }
            tranList.add(new ClassTranslations(txtFLanguage.getText(), tr1, tr2, tr2));
            
            pnlScrTraIn.remove(tranTable);
            tranTable = new TranslationTabGenerator(tranList);
            panelHeight();
            pnlScrTraIn.add(tranTable);
            setNoSpaceString(tranList);
            pnlScrTraIn.validate();
            pnlScrTraIn.repaint();
            
            setEnabled(true);
            jDialAddLang.setVisible(false);
            txtFField.setText("");
            lblIconDir.setText("");
        } else {lblAdvAddLang.setVisible(true);};
    }//GEN-LAST:event_lblAddLMouseClicked

    private void lblSaveMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblSaveMouseClicked
        if (lblLogoDir.getText() != "") {
            if (checkTable()) {
                String source = lblIconDir.getText();
                String target = new File("src/Editor_1_1/logo.png").getAbsolutePath();
                try {
                    FileUtils.copyFile(new File(source), new File(target));
                } catch (IOException ex) {
                    Logger.getLogger(MainPage.class.getName()).log(Level.SEVERE, null, ex);
                }
                if (comBoxIcon.getSelectedIndex() == 0) {
                    genSet = new ClassGeneralSettings(target, (String) comBoxIcon.getSelectedItem(), lightInfo, lightStat, lightSet, lblColBackCode.getBackground(), lblColTextCode.getBackground(), lblColTextAdvCode.getBackground(), lblColBoxCode.getBackground(), lblColExHeadCode.getBackground(), lblColInHeadCode.getBackground(), selControl());
                } else {};
                lblAdvColLog1.setVisible(false);
                lblAdvColLog2.setVisible(false);
                close();
            } else {lblAdvColLog2.setVisible(true);};
        } else {lblAdvColLog1.setVisible(true);};
    }//GEN-LAST:event_lblSaveMouseClicked

    private void lblAddFMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblAddFMouseClicked
        if (txtFField.getText() != "") {
            int cont = 0;
            while(true) {
                String[] tt;
                String[] f;
                try {
                    tt = tranList.get(cont).getFieldsVariable();
                    f = new String[tt.length+1];
                    int c = 0;
                    while(true) {
                        try {
                            f[c] = tt[c];
                        } catch (Exception e) {break;}
                        c++;
                    }
                    if (cont == 0) {
                        f[tt.length] = txtFField.getText();
                    } else {f[tt.length] = "TRANSLATE";}
                } catch (Exception e) {break;}
                tranList.get(cont).setFieldsVariable(f);
                cont++;
            }
            pnlScrTraIn.removeAll();
            tranTable = new TranslationTabGenerator(tranList);
            panelHeight();
            pnlScrTraIn.add(tranTable);
            setNoSpaceString(tranList);
            pnlScrTraIn.validate();
            pnlScrTraIn.repaint();
            
            setEnabled(true);
            jDialAddField.setVisible(false);
            System.out.println("Inserito");
        } else {lblAdvAddField.setVisible(true);};
    }//GEN-LAST:event_lblAddFMouseClicked

    private void lblDelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblDelMouseClicked
        if(listDel.getSelectedIndices() != null) {
            switch(parent) {
                case "lang" : {
                    int c = 0;
                    int[] indx = listDel.getSelectedIndices();
                    while(true) {
                        try {
                            langList.remove(indx[c]);
                        } catch (Exception e) {break;}
                        c++;
                    }
                    langTab = new LanguagesTabGenerator(langList);
                    pnlScrPnIN.removeAll();
                    panelHeight();
                    pnlScrPnIN.add(langTab);
                    pnlScrPnIN.validate();
                    pnlScrPnIN.repaint();
                    break;
                }
                case "field" : {
                    int c = 0;
                    int[] indx = listDel.getSelectedIndices();
                    while(true) {
                        try {
                            tranList.get(c).removeFields(indx);
                            
                        } catch (Exception e) {break;}
                        c++;
                    }
                    pnlScrTraIn.remove(tranTable);
                    tranTable = new TranslationTabGenerator(tranList);
                    panelHeight();
                    pnlScrTraIn.add(tranTable);
                    setNoSpaceString(tranList);
                    pnlScrTraIn.validate();
                    pnlScrTraIn.repaint();
                    break;
                }
            }
        }
        setEnabled(true);
        jDialDel.setVisible(false);
        System.out.println("Eliminato");
    }//GEN-LAST:event_lblDelMouseClicked

    private void exitButtonDiaStartMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_exitButtonDiaStartMouseEntered
        exitButtonDiaStart.setIcon(new ImageIcon(getClass().getResource("/editor_1_1/closeIconCrossed.png")));
    }//GEN-LAST:event_exitButtonDiaStartMouseEntered

    private void exitButtonDiaStartMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_exitButtonDiaStartMouseExited
        exitButtonDiaStart.setIcon(new ImageIcon(getClass().getResource("/editor_1_1/closeIconEmpty.png")));
    }//GEN-LAST:event_exitButtonDiaStartMouseExited

    private void exitButtonDiaStartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitButtonDiaStartActionPerformed
        closeNoSave();
    }//GEN-LAST:event_exitButtonDiaStartActionPerformed

    private void lblContinueStartMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblContinueStartMouseClicked
        if((txtFUser.getText() == "") || (passFieldIns.getText() == "") || (passFieldConf.getText() == "") || (txtFHost.getText() == "")) {
            lblAdvStartFields.setVisible(true);
        } else {
            if (passFieldIns.getText().equals(passFieldConf.getText())) {
                lblAdvStartFields.setVisible(false);
                lblAdvStartPass.setVisible(false);
                setEnabled(true);
                jFrameStart.setVisible(false);
                
            } else {lblAdvStartPass.setVisible(true);}
        }
    }//GEN-LAST:event_lblContinueStartMouseClicked

    private void exitButtonAddFSMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_exitButtonAddFSMouseEntered
        exitButtonAddFS.setIcon(new ImageIcon(getClass().getResource("/editor_1_1/closeIconCrossed.png")));
    }//GEN-LAST:event_exitButtonAddFSMouseEntered

    private void exitButtonAddFSMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_exitButtonAddFSMouseExited
        exitButtonAddFS.setIcon(new ImageIcon(getClass().getResource("/editor_1_1/closeIconEmpty.png")));
    }//GEN-LAST:event_exitButtonAddFSMouseExited

    private void exitButtonAddFSActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitButtonAddFSActionPerformed
        jDialAddFieldStart.setVisible(false);
        setEnabled(true);
        txtFFieldAddFS.setText("");
    }//GEN-LAST:event_exitButtonAddFSActionPerformed

    private void lblAddFSMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblAddFSMouseClicked
        if(txtFFieldAddFS.getText() != "") {
            int cont = 0;
            while(true) {
                String[] tt;
                String[] f;
                try {
                    tt = tranList.get(cont).getFieldsStables();
                    f = new String[tt.length+1];
                    int c = 0;
                    while(true) {
                        try {
                            f[c] = tt[c];
                        } catch (Exception e) {break;}
                        c++;
                    }
                    if (cont == 0) {
                        f[tt.length] = txtFFieldAddFS.getText();
                    } else {f[tt.length] = "TRANSLATE";}
                } catch (Exception e) {break;}
                tranList.get(cont).setFieldsStables(f);
                cont++;
            }
            tranTable = new TranslationTabGenerator(tranList);
            listFStart.setModel(new javax.swing.AbstractListModel<String>() {
                String[] strings = tranList.get(0).getFieldsStables();
                public int getSize() { return strings.length; }
                public String getElementAt(int i) { return strings[i]; }
            });
            setNoSpaceString(tranList);
        }
    }//GEN-LAST:event_lblAddFSMouseClicked

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        if(firstTimeCheck()) {
            setEnabled(false);
            jFrameStart.setVisible(true);
        }
    }//GEN-LAST:event_formWindowOpened

    private void lblAddFSTartMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblAddFSTartMouseClicked
        setEnabled(false);
        jDialAddFieldStart.setVisible(true);
    }//GEN-LAST:event_lblAddFSTartMouseClicked

    private void lblColTextChooseMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblColTextChooseMouseClicked
        setEnabled(false);
        chosenColor = jColorChooser.showDialog(rootPane, "Scegli il colore", Color.decode("#"+Integer.toHexString(genSet.getTextMain().getRGB()).substring(2)));
        setEnabled(true);
        if(chosenColor != null) {lblColTextCode.setBackground(chosenColor);};
    }//GEN-LAST:event_lblColTextChooseMouseClicked

    private void lblColTextAdvChoosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblColTextAdvChoosMouseClicked
        setEnabled(false);
        chosenColor = jColorChooser.showDialog(rootPane, "Scegli il colore", Color.decode("#"+Integer.toHexString(genSet.getTextAdv().getRGB()).substring(2)));
        setEnabled(true);
        if(chosenColor != null) {lblColTextAdvCode.setBackground(chosenColor);};
    }//GEN-LAST:event_lblColTextAdvChoosMouseClicked

    private void lblColBoxChooseMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblColBoxChooseMouseClicked
        setEnabled(false);
        chosenColor = jColorChooser.showDialog(rootPane, "Scegli il colore", Color.decode("#"+Integer.toHexString(genSet.getBox().getRGB()).substring(2)));
        setEnabled(true);
        if(chosenColor != null) {lblColBoxCode.setBackground(chosenColor);};
    }//GEN-LAST:event_lblColBoxChooseMouseClicked

    private void lblColExHeadChooseMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblColExHeadChooseMouseClicked
        setEnabled(false);
        chosenColor = jColorChooser.showDialog(rootPane, "Scegli il colore", Color.decode("#"+Integer.toHexString(genSet.getHeadEx().getRGB()).substring(2)));
        setEnabled(true);
        if(chosenColor != null) {lblColExHeadCode.setBackground(chosenColor);};
    }//GEN-LAST:event_lblColExHeadChooseMouseClicked

    private void lblColInHeadChooseMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblColInHeadChooseMouseClicked
        setEnabled(false);
        chosenColor = jColorChooser.showDialog(rootPane, "Scegli il colore", Color.decode("#"+Integer.toHexString(genSet.getHeadIn().getRGB()).substring(2)));
        setEnabled(true);
        if(chosenColor != null) {lblColInHeadCode.setBackground(chosenColor);};
    }//GEN-LAST:event_lblColInHeadChooseMouseClicked

    private void lblLogoChooseMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblLogoChooseMouseClicked
        jFileChooserLogo.showDialog(rootPane, "Seleziona");
    }//GEN-LAST:event_lblLogoChooseMouseClicked
    
    private void initPersonalComponent() {
        langRead = new ReadLanguagesFile();
        langList = langRead.getList();
        
        tranRead = new ReadTranslationsFile();
        tranList = tranRead.getList();
        
        genRead = new ReadGeneralFile();
        genSet = genRead.getSet();
        
        init = new ClassInitialization(new ReadInitializationFile().getInit());
        
        if (init.isFirstTime()) {
            langList = new ArrayList<>();
            langList.add(new ClassLanguages(true, "Italiano.png", "Italiano"));
            langList.add(new ClassLanguages(true, "English.png", "English"));
            tranList = new ArrayList<>();
            String[] italiano = {"Inserire solo lettere, numeri o spazi", "Inserire massimo 25 caratteri", "Tutti i campi sono obbligatori", "Devi accettare i termini di utilizzo e l'informativa sulla privacy", "Ho letto e acconsento ai termini di utilizzo e all'informativa sulla privacy", "Continua", "Registrazione", "Fornitore", "Cliente", "Consulente", "Altro", "Ci siamo quasi", ", scannerizza il codice QR seguente alla reception per ottenere il badge", "Scarica", "Registrati", "Scanner QR", "Benvenuto", "La registrazione è stata completata, ti è stato assegnato il badge numero:", "Termina", "Arrivederci", "Uscita eseguita con successo"};
            String[] italianoS = {"Nome", "Cognome", "Azienda", "Referente aziendale", "Tipo di visita"};
            String[] italianoV = {};
            String[] english = {"Enter only letters, numbers or spaces", "Enter a maximum of 25 characters", "All fields are required", "You must accept usage terms and privacy policy", "I read and accepted the usage terms and the privacy policy", "Continue", "Registration", "Supplier", "Costumer", "Consultant", "Other", "Almost done", ", scan the following QR code at the reception to get your badge", "Download", "Register", "QR scanner", "Welcome", "Registration complited, you have been assigned badge number:", "Finish", "Goodbye", "Exit successfully executed"};
            String[] englishS = {"Name", "Surname", "Company", "Company contact", "Type of visit"};
            String[] englishV = {};
            tranList.add(new ClassTranslations("Italiano", italiano, italianoS, italianoV));
            tranList.add(new ClassTranslations("English", english, englishS, englishV));
            genSet = new ClassGeneralSettings("", "Chiaro", "", "", "", Color.decode("#25252E"), Color.decode("#E6E6E6"), Color.decode("#7C7C85"), Color.decode("#E6E6E6"), Color.decode("#E6E6E6"), Color.decode("#E6E6E6"), 0);
        }
        
        mainF = new Font("Sans Serif",Font.PLAIN, 15);
        subTitleFont = new Font("Sans Serif",Font.PLAIN, 19);
        
        langTab = new LanguagesTabGenerator(langList);
        langTab.setFont(mainF);
        
        tranTable = new TranslationTabGenerator(tranList);
        
        setNoSpaceString(tranList);
        
        defaultColor = Color.decode("#607D8B"); //sclego il colore primario
        mousePassedColor = Color.decode("#5E7A88");
        selectedColor = Color.decode("#718D9C");
        textColor = Color.decode("#ECEFF1"); //sclego il colore dei testi
        
        shadow = new DropShadowBorder();
        //creazione e impostazione dell'ombra
        shadow.setShadowColor(Color.BLACK);
        shadow.setShowLeftShadow(true);
        shadow.setShowRightShadow(true);
        shadow.setShowTopShadow(false);
        shadow.setShowBottomShadow(true);
        shadow.setShadowSize(10);
        shadow.setCornerSize(25);
    }
    
    
    private void preset() {
        lang.setVisible(true);
        fiel.setVisible(false);
        collog.setVisible(false);
        
        panelHeight();
        pnlScrPnIN.add(langTab);
        pnlScrTraIn.add(tranTable);
        lblAdvAddLang.setVisible(false);
        lblAdvColLog1.setVisible(false);
        lblAdvColLog2.setVisible(false);
        lblAdvAddField.setVisible(false);
        lblAdvAddFS.setVisible(false);
        lblAdvStartFields.setVisible(false);
        lblAdvStartPass.setVisible(false);
        
        listFStart.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = tranList.get(0).getFieldsStables();
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        reorderCol();
    }
    
    private void selection(byte finalIndx) {
        switch (indx) {
            case 0: {
                langP.setBackground(defaultColor);
                langL.setForeground(textColor);
            }break;
            case 1: {
                fieldP.setBackground(defaultColor);
                fieldL.setForeground(textColor);
            }break;
            case 2: {
                collogP.setBackground(defaultColor);
                collogL.setForeground(textColor);
            }break;
        }
        switch (finalIndx) {
            case 0: {
                langP.setBackground(selectedColor);
                langL.setForeground(textColor);
                lang.setVisible(true);
                fiel.setVisible(false);
                collog.setVisible(false);
            }break;
            case 1: {
                fieldP.setBackground(selectedColor);
                fieldL.setForeground(textColor);
                lang.setVisible(false);
                fiel.setVisible(true);
                collog.setVisible(false);
            }break;
            case 2: {
                collogP.setBackground(selectedColor);
                collogL.setForeground(textColor);
                lang.setVisible(false);
                fiel.setVisible(false);
                collog.setVisible(true);
            }break;
        }
        
        indx = finalIndx;
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel DiaAddFCon;
    private javax.swing.JPanel DiaAddFSCon;
    private javax.swing.JPanel DiaAddLCon;
    private javax.swing.JPanel DiaDelCont;
    private javax.swing.JPanel DiaStartCon;
    private javax.swing.JLabel barIcon;
    private javax.swing.JLabel barIconAddF;
    private javax.swing.JLabel barIconAddFS;
    private javax.swing.JLabel barIconDiaAddL;
    private javax.swing.JLabel barIconDiaDel;
    private javax.swing.JLabel barIconDiaStart;
    private javax.swing.JCheckBox checkDataPer;
    private javax.swing.JPanel collog;
    private javax.swing.JLabel collogL;
    private javax.swing.JPanel collogP;
    private javax.swing.JComboBox<String> comBoxIcon;
    private javax.swing.JButton exitButton;
    private javax.swing.JButton exitButtonAddF;
    private javax.swing.JButton exitButtonAddFS;
    private javax.swing.JButton exitButtonDiaAddL;
    private javax.swing.JButton exitButtonDiaDel;
    private javax.swing.JButton exitButtonDiaStart;
    private javax.swing.JPanel fiel;
    private javax.swing.JLabel fieldL;
    private javax.swing.JPanel fieldP;
    private javax.swing.JLayeredPane headerLayPane;
    private javax.swing.JColorChooser jColorChooser;
    private javax.swing.JDialog jDialAddField;
    private javax.swing.JDialog jDialAddFieldStart;
    private javax.swing.JDialog jDialAddLang;
    private javax.swing.JDialog jDialDel;
    private javax.swing.JFileChooser jFileChooserFlag;
    public javax.swing.JFileChooser jFileChooserLogo;
    private javax.swing.JFrame jFrameStart;
    private javax.swing.JPanel lang;
    private javax.swing.JLabel langL;
    private javax.swing.JPanel langP;
    private javax.swing.JLabel lblAddF;
    private javax.swing.JLabel lblAddFS;
    private javax.swing.JLabel lblAddFSTart;
    private javax.swing.JLabel lblAddField;
    private javax.swing.JLabel lblAddL;
    private javax.swing.JLabel lblAddLan;
    private javax.swing.JLabel lblAdvAddFS;
    private javax.swing.JLabel lblAdvAddField;
    private javax.swing.JLabel lblAdvAddLang;
    private javax.swing.JLabel lblAdvColLog1;
    private javax.swing.JLabel lblAdvColLog2;
    private javax.swing.JLabel lblAdvStartFields;
    private javax.swing.JLabel lblAdvStartPass;
    private javax.swing.JLabel lblColBack;
    private javax.swing.JLabel lblColBackChoose;
    private javax.swing.JLabel lblColBackCode;
    private javax.swing.JLabel lblColBox;
    private javax.swing.JLabel lblColBoxChoose;
    private javax.swing.JLabel lblColBoxCode;
    private javax.swing.JLabel lblColExHead;
    private javax.swing.JLabel lblColExHeadChoose;
    private javax.swing.JLabel lblColExHeadCode;
    private javax.swing.JLabel lblColIcon;
    private javax.swing.JLabel lblColInHead;
    private javax.swing.JLabel lblColInHeadChoose;
    private javax.swing.JLabel lblColInHeadCode;
    private javax.swing.JLabel lblColText;
    private javax.swing.JLabel lblColTextAdv;
    private javax.swing.JLabel lblColTextAdvChoos;
    private javax.swing.JLabel lblColTextAdvCode;
    private javax.swing.JLabel lblColTextChoose;
    private javax.swing.JLabel lblColTextCode;
    private javax.swing.JLabel lblConPasswStart;
    private javax.swing.JLabel lblContinueStart;
    private javax.swing.JLabel lblDataPer;
    private javax.swing.JLabel lblDataPerDay;
    private javax.swing.JLabel lblDel;
    private javax.swing.JLabel lblDelField;
    private javax.swing.JLabel lblDelLang;
    private javax.swing.JLabel lblFHost;
    private javax.swing.JLabel lblField;
    private javax.swing.JLabel lblFieldAddFS;
    private javax.swing.JLabel lblIconDir;
    private javax.swing.JLabel lblIconSel;
    private javax.swing.JLabel lblInfoStart1;
    private javax.swing.JLabel lblInfoStart2;
    private javax.swing.JLabel lblLangHead;
    private javax.swing.JLabel lblLangName;
    private javax.swing.JLabel lblLogo;
    private javax.swing.JLabel lblLogoChoose;
    private javax.swing.JLabel lblLogoDir;
    private javax.swing.JLabel lblPasswStart;
    private javax.swing.JLabel lblSave;
    private javax.swing.JLabel lblSubTColLog;
    private javax.swing.JLabel lblSubTPri;
    private javax.swing.JLabel lblUserStart;
    private javax.swing.JList<String> listDel;
    private javax.swing.JList<String> listFStart;
    private javax.swing.JPasswordField passFieldConf;
    private javax.swing.JPasswordField passFieldIns;
    private javax.swing.JPanel pnlAddLang;
    private javax.swing.JPanel pnlBtnAddLang;
    private javax.swing.JPanel pnlDelLang;
    private javax.swing.JPanel pnlMenu;
    private javax.swing.JPanel pnlScrPnEX;
    private javax.swing.JPanel pnlScrPnIN;
    private javax.swing.JPanel pnlScrTraEx;
    private javax.swing.JPanel pnlScrTraIn;
    private javax.swing.JPanel pnlTopHeader;
    private javax.swing.JPanel pnlTopHeaderAddF;
    private javax.swing.JPanel pnlTopHeaderAddFS;
    private javax.swing.JPanel pnlTopHeaderDiaAddL;
    private javax.swing.JPanel pnlTopHeaderDiaDel;
    private javax.swing.JPanel pnlTopHeaderDiaStart;
    private javax.swing.JScrollPane scrollPaneDel;
    private javax.swing.JScrollPane scrollPaneFStart;
    private javax.swing.JScrollPane scrollPaneLang;
    private javax.swing.JScrollPane scrollPaneTran;
    private javax.swing.JLabel titleLbl;
    private javax.swing.JLabel titleLblAddF;
    private javax.swing.JLabel titleLblAddFS;
    private javax.swing.JLabel titleLblDiaAddL;
    private javax.swing.JLabel titleLblDiaDel;
    private javax.swing.JLabel titleLblDiaStart;
    private javax.swing.JTextField txtFDataPer;
    private javax.swing.JTextField txtFField;
    private javax.swing.JTextField txtFFieldAddFS;
    private javax.swing.JTextField txtFHost;
    private javax.swing.JTextField txtFLanguage;
    private javax.swing.JTextField txtFUser;
    // End of variables declaration//GEN-END:variables

    private void close() {
        tranOut = new OutTranslationsFile(tranList);
        langOut = new OutLanguagesFile(langList);
        genOut = new OutGeneralFile(genSet);
        new CSSAutoCompilator(langList, tranList, genSet, noSpacedFields);
        if((tranRead.getList().get(0).getFieldsStableLenght() != tranList.get(0).getFieldsStableLenght()) || (tranRead.getList().get(0).getFieldsVariableLenght() != tranList.get(0).getFieldsVariableLenght()) || firstTimeCheck()) {new SQLAutoCompilator(noSpacedFields, txtFUser.getText(), genSet.getPersitance());}
        if(firstTimeCheck()) {new PHPAutoCompilator(txtFHost.getText(), txtFUser.getText(), passFieldIns.getText(), noSpacedFields); init.firstTimeUse();}
        new OutInitializationFile(init);
        System.exit(0);
    }
    
    private void closeNoSave() {
        System.exit(0);
    }

    private void reorderCol() {
        lblColBackCode.setBackground(genSet.getBackgroundColor());
        lblColBoxCode.setBackground(genSet.getBox());
        lblColExHeadCode.setBackground(genSet.getHeadEx());
        lblColInHeadCode.setBackground(genSet.getHeadIn());
        lblColTextAdvCode.setBackground(genSet.getTextAdv());
        lblColTextCode.setBackground(genSet.getTextMain());
        if (genSet.getPersitance() == 0) {txtFDataPer.setText(null); checkDataPer.setSelected(true);}
        else {txtFDataPer.setText(Integer.toString(genSet.getPersitance())); checkDataPer.setSelected(false);};
        lblLogoDir.setText(genSet.getLogo());
        if(genSet.getIconPack().equals("Chiaro")) {comBoxIcon.setSelectedIndex(0);}
        else {comBoxIcon.setSelectedIndex(1);};
    }

    private void panelHeight() {
        pnlScrPnIN.setSize(pnlScrPnIN.getWidth(), langTab.getRowHeight()*langTab.getRowCount());
        pnlScrTraIn.setSize(pnlScrTraIn.getWidth(), (tranTable.getRowHeight()*tranTable.getRowCount()));
    }

    private int selControl() {
        if(checkDataPer.isSelected()){
            return 0;
        } else {
            return 1;
        }
    }

    private boolean firstTimeCheck() {
        return init.isFirstTime();
    }

    private void setNoSpaceString(List<ClassTranslations> tranList) {
        noSpacedFields = new String[tranList.get(0).getFieldsStableLenght() + tranList.get(0).getFieldsVariableLenght()];
        int cont = 0;
        
        int co = 0;
        while(co < tranList.get(0).getFieldsStableLenght()) {
            noSpacedFields[cont] = WordUtils.capitalize(tranList.get(0).getFieldsStables()[co]).replaceAll("\\s+","");
            cont ++;
            co++;
        }
        co = 0;
        while(co < tranList.get(0).getFieldsVariableLenght()) {
            noSpacedFields[cont] = WordUtils.capitalize(tranList.get(0).getFieldsVariable()[co]).replaceAll("\\s+","");
            cont ++;
            co++;
        }
    }

    private boolean checkTable() {
        int c = 0;
        while (c < tranTable.getModel().getRowCount()) {
            int cc = 0;
            while (cc < tranTable.getModel().getColumnCount()) {                    
                System.out.println(c+" "+cc);
                String s = (String) tranTable.getModel().getValueAt(c, cc);
                if (s.equals("TRANSLATE")) {
                    return false;
                }
                cc++;
            }
            c++;
        }
        return true;
    }
}
